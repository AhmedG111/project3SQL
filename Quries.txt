/* Query 1 -query used for first insight */

SELECT g.GenreId,
       g.Name,
       COUNT (i.Total) AS total_purchase
FROM Genre g
JOIN Track t ON t.GenreId = g.GenreId
JOIN InvoiceLine l ON l.TrackId = t.TrackId
JOIN Invoice i ON i.InvoiceId = l.InvoiceId
GROUP BY 2
ORDER BY 3 DESC
LIMIT 10;

/* Query 2 -query used for second insight */

SELECT c.Country,
       COUNT (*) AS Rock_music
FROM Customer c
JOIN Invoice i ON c.CustomerId = i.CustomerId
JOIN InvoiceLine l ON i.InvoiceId = l.InvoiceId
JOIN Track t ON t.TrackId = l.TrackId
JOIN Genre g ON g.GenreId = t.GenreId
WHERE g.Name = 'Rock'
GROUP BY 1
ORDER BY 2 DESC
LIMIT 15;


/* Query 3 -query used for third insight */

SELECT a. ArtistId,
       a.Name,
       COUNT (*) AS songs
FROM Artist a
JOIN Album b ON a.ArtistId = b.ArtistId
JOIN Track t ON b.AlbumId = t.AlbumId
JOIN Genre g ON t.GenreId = g.GenreId
WHERE g.Name = 'Rock'
GROUP BY 1,
         2
ORDER BY 3 DESC
LIMIT 20;

/* Query 4 -query used for forth insight */

SELECT a.Name,
       SUM (t1.cost) AS FINAL
FROM
  (SELECT l.TrackId,
          (Quantity * UnitPrice)AS cost
   FROM InvoiceLine l
   JOIN Invoice i ON i.InvoiceId = l.InvoiceId) t1
JOIN Track t ON t1.TrackId = t.TrackId
JOIN Album b ON b.AlbumId = t.AlbumId
JOIN Artist a ON a.ArtistId = b.ArtistId
GROUP BY 1
ORDER BY 2 DESC
LIMIT 10;